---
import type { ResumeSchema } from "@kurone-kito/jsonresume-types";
import { astroI18n } from "astro-i18n";

const locale = astroI18n.locale;
const defaultLocale = locale === astroI18n.primaryLocale;

import Grid from "../components/Grid.astro";
import Volunteer from "../components/sections/Volunteer.astro";
import Education from "../components/sections/Education.astro";
import Work from "../components/sections/Work.astro";
import Skills from "../components/sections/Skills.astro";
import Projects from "../components/sections/Projects.astro";
import References from "../components/sections/References.astro";
import Languages from "../components/sections/Languages.astro";
import Certificates from "../components/sections/Certificates.astro";
import Interests from "../components/sections/Interests.astro";
import Profiles from "../components/sections/Profiles.astro";

import { Icon } from "astro-icon/components";

// Import all resyme data files
const resumes = import.meta.glob("../data/resume*.json", { eager: true });
// Import resume data file in selected language
const resume = resumes[`../data/resume${defaultLocale ? "" : "." + locale}.json`] as ResumeSchema;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{resume.basics?.name}</title>
    <style>
      @page {
        margin: 0;
      }
      @media print {
        html,
        body {
          height: calc(var(--pages) * 100vh);
          overflow: hidden;
        }
      }
    </style>
  </head>
  <body class="relative flex h-full min-h-screen flex-col">
    <Grid>
      <div class="h-full bg-primary-100">
        <!--Contact info-->
        <div class="bg-primary-500 p-2 text-white">
          <h1 class="text-2xl font-semibold">{resume.basics?.name}</h1>
          <h2 class="text-lg">{resume.basics?.summary}</h2>
          <p class="flex items-center"><Icon name="lucide:map-pin" class="mr-1" />{resume.basics?.location?.city}</p>
          {
            resume.basics?.url && (
              <a href={resume.basics.url} class="flex items-center">
                <Icon name="lucide:external-link" class="mr-1" />
                {resume.basics.url}
              </a>
            )
          }
          {
            resume.basics?.email && (
              <a href={"mailto:" + resume.basics?.email} class="flex items-center">
                <Icon name="lucide:mail" class="mr-1" />
                {resume.basics?.email}
              </a>
            )
          }
        </div>
        <div class="p-2">
          <!--Social media-->
          {
            resume.basics?.profiles && resume.basics.profiles.length > 0 && (
              <Profiles profiles={resume.basics.profiles} />
            )
          }
          <!--Interests-->
          {resume.interests && resume.interests.length > 0 && <Interests interests={resume.interests} />}
          {resume.certificates && resume.certificates.length > 0 && <Certificates certificates={resume.certificates} />}
          {resume.languages && resume.languages.length > 0 && <Languages languages={resume.languages} />}
        </div>
      </div>
      <div class="col-span-2 p-2">
        {resume.skills && resume.skills.length > 0 && <Skills skills={resume.skills} />}
        {resume.work && resume.work.length > 0 && <Work work={resume.work} />}
        {resume.education && resume.education.length > 0 && <Education education={resume.education} />}
        {resume.volunteer && resume.volunteer.length > 0 && <Volunteer volunteer={resume.volunteer} />}
        {resume.references && resume.references.length > 0 && <References references={resume.references} />}
        {resume.projects && resume.projects.length > 0 && <Projects projects={resume.projects} />}
      </div>
    </Grid>
    {resume.meta?.footer && <footer class="bg-primary-500 p-4 text-xs text-white">{resume.meta.footer}</footer>}
    <script is:inline>
      // Get the height of the content
      let contentHeight = document.body.scrollHeight;

      // Height of an A4 page in pixels at 96 DPI
      let pageHeight = 1123;

      // Calculate the number of pages
      let pages = Math.ceil(contentHeight / pageHeight);

      // Store the number of pages in a CSS variable
      document.documentElement.style.setProperty("--pages", pages);
    </script>
  </body>
</html>
