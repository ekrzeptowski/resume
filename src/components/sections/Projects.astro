---
import { astroI18n, t } from "astro-i18n";
import SectionTitle from "../SectionTitle.astro";
import type { ResumeSchema } from "@kurone-kito/jsonresume-types";
import { Icon } from "astro-icon/components";

import { formatDate } from "../../utils/formatDate";

const { projects } = Astro.props;

interface Props {
  projects: ResumeSchema["projects"];
}
---

<section>
  <SectionTitle>{t("section.projects")}</SectionTitle>
  {
    projects?.map((project) => {
      project.startDateParsed = project.startDate ? formatDate(project.startDate, astroI18n.locale) : undefined;
      project.endDateParsed = project.endDate ? formatDate(project.endDate, astroI18n.locale) : undefined;

      return (
        <div>
          <div class="flex font-semibold">
            <h4 class="flex-1">{project.name}</h4>
            <p>
              {project.startDateParsed} {project.endDateParsed ? ` - ${project.endDateParsed}` : ""}
            </p>
          </div>
          {project.url && (
            <a href={project.url} class="flex items-center">
              <Icon name="lucide:external-link" class="mr-1" />
              {project.url}
            </a>
          )}

          <p class="my-2">{project.description}</p>

          {project.highlights?.map((highlight) => (
            <p>{highlight}</p>
          ))}
        </div>
      );
    })
  }
</section>
