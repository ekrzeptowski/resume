---
import { astroI18n, t } from "astro-i18n";
import SectionTitle from "../SectionTitle.astro";
import type { ResumeSchema } from "@kurone-kito/jsonresume-types";
import { formatDate } from "../../utils/formatDate";

const { education } = Astro.props;

interface Props {
  education: ResumeSchema["education"];
}
---

<section>
  <SectionTitle>{t("section.education")}</SectionTitle>
  {
    education?.map((education) => {
      education.startDateParsed = education.startDate ? formatDate(education.startDate, astroI18n.locale) : undefined;
      education.endDateParsed = education.endDate ? formatDate(education.endDate, astroI18n.locale) : undefined;

      return (
        <div class="flex">
          <div class="flex-1">
            <h4 class="font-semibold">
              <a href={education.url || undefined}>{education.institution}</a>
            </h4>
            {education.area && <p>{education.area}</p>}
            {education.gpa && <p>{education.gpa}</p>}
            {education.courses?.map((course) => {
              return <p>{course}</p>;
            })}
          </div>
          <div class="text-right">
            {education.startDateParsed && (
              <p class="font-semibold">
                {education.startDateParsed} - {education.endDateParsed || t("present")}
              </p>
            )}
            <p>{education.studyType}</p>
          </div>
        </div>
      );
    })
  }
</section>
